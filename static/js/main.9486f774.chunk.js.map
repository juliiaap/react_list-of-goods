{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reset","reverse","visibleGoods","goods","sort","good1","good2","localeCompare","length","getReorderedGoods","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,MAAQ,WACN,EAAKJ,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,EAyBEO,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,IAAMU,EAtEH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOC,GAEzB,OAAQV,GACN,KAAKL,EAASM,KACZ,MAEF,KAAKN,EAASS,SACZK,EAAaE,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExC,MAEF,KAAKlB,EAASW,OACZG,EAAaE,MACX,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAME,UAY9C,OAJIhB,GACFU,EAAaD,UAGRC,EAwCgBO,CAAkBpB,EAAiBqB,KAAKnB,OAC7D,EAAiCmB,KAAKnB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYpB,IAAaL,EAASS,WAGxCiB,QAASJ,KAAKf,eAThB,iCAcA,wBACEiB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASW,SAGxCe,QAASJ,KAAKZ,aAThB,4BAcA,wBACEc,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAarB,IAGnBsB,QAASJ,KAAKT,QAThB,sBAcET,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKV,MAHhB,sBAUJ,6BACGE,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA7FpC,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9486f774.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.NONE:\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (good1, good2) => (good1.length - good2.length),\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button',\n                'is-warning',\n                { 'is-light': !isReversed },\n              )\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}